version: '3.9'

services:
  # MKCert
  mkcert:
    build:
        context: ./mkcert
        dockerfile: Dockerfile          
    image: mkcert:local
    container_name: coder-mkcert
    #env_file: .env
    environment:
      DOMAINS: ${CERT_DOMAINS}
      user: ${CURRENT_UID}
    volumes:
      - certs:/root/.local/share/mkcert
  # Coder Server
  coder:
    build:
      context: ./coder
      dockerfile: Dockerfile
      args:
        U_UID: ${U_UID}
        U_GID: ${U_GID}
        DOCKER_USER: ${USER}
    image: coder:local
    container_name: coder
    #network_mode: host
#    privileged: true
#    security_opt:
#      - seccomp:unconfined
#      - apparmor:unconfined
    ports:
      - 8080:8080
      #- 443:443
    tty: true
    environment:
     U_UID: ${U_UID}
     U_GID: ${U_GID}
#     DOCKER_USER: coder  
     DOCKER_USER: ${USER} # Please run as follows CURRENT_UID=$(id -u):$(id -g) docker-compose up
     NODE_EXTRA_CA_CERTS: $HOME/.local/share/code-server/certs/rootCA.pem
#    user: ${CURRENT_UID} # Please run as follows CURRENT_UID=$(id -u):$(id -g) docker-compose up
    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
      #- ./.config:/root/.config
      - data:$HOME/.local/share/code-server
      - certs:$HOME/.local/share/code-server/certs
      - projects:$HOME/projects
    command: [
      '--auth', 'none', 
      '--bind-addr', '0.0.0.0:8080', 
      '--cert', '$HOME/.local/share/code-server/certs/${DOMAIN_NAME}.pem', 
      '--cert-key', '$HOME/.local/share/code-server/certs/${DOMAIN_NAME}-key.pem'
    ]
    depends_on:
      - mkcert

networks:
  coder_network:
    driver: bridge
    name: coder_network

volumes:
  certs:
  projects:
  data:
