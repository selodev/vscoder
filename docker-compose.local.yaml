version: '3.7'

services:
  # MKCert
  mkcert:
    build:
        context: ./mkcert
        dockerfile: Dockerfile
    image: mkcert:local
    container_name: coder-mkcert
    #env_file: .env
    environment:
      DOMAINS: ${CERT_DOMAINS}
    volumes:
      - ./mkcert/certs:/root/.local/share/mkcert
  # Coder Server
  coder:
    build:
      context: ./coder
      dockerfile: Dockerfile
    image: coder:local
    container_name: coder
    #network_mode: host
    ports:
      - 80:80
      - 443:443
    environment:
      DOCKER_USER: ${USER} # Please run as follows CURRENT_UID=$(id -u):$(id -g) docker-compose up
      NODE_EXTRA_CA_CERTS: '/home/coder/.local/share/code-server/certs/rootCA.pem'
    user: ${CURRENT_UID} # Please run as follows CURRENT_UID=$(id -u):$(id -g) docker-compose up
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      #- ./.config:/root/.config
      - ./data/extensions:/home/coder/.local/share/code-server/extensions
      - ./data/settings.json:/home/coder/.local/share/code-server/User/settings.json
      - ./mkcert/certs:/home/coder/.local/share/code-server/certs
      - ../projects:/home/coder/projects
    command: [
      '--auth', 'none', 
      '--bind-addr', '0.0.0.0:443', 
      '--cert', '/home/coder/.local/share/code-server/certs/${DOMAIN_NAME}.pem', 
      '--cert-key', '/home/coder/.local/share/code-server/certs/${DOMAIN_NAME}-key.pem'
    ]
    depends_on:
      - mkcert
networks:
  coder_network:
    driver: bridge
    name: coder_network
